services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: fleet_management_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: fleetuser
      POSTGRES_PASSWORD: fleetpass
      POSTGRES_DB: fleet_management
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fleetuser -d fleet_management"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fleet_network

  # Fleet Management API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fleet_management_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://fleetuser:fleetpass@db:5432/fleet_management
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-secret-key-change-in-production}
      JWT_ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
      - ./backend:/app/backend
      - ./main.py:/app/main.py
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - fleet_network

volumes:
  postgres_data:
    driver: local

networks:
  fleet_network:
    driver: bridge
